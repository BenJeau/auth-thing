{
  "openapi": "3.1.0",
  "info": {
    "title": "Auth Thing REST API",
    "description": "A [Axum](https://github.com/tokio-rs/axum) Rust based API REST endpoints for the Auth Thing system interfacing with SQLite via [sqlx](https://github.com/launchbadge/sqlx). This documentation is generated using [utoipa](https://github.com/juhaku/utoipa).\n\n## How to use\n\nSelect a tag (category) to reveal information about the endpoints and select an endpoint to test them. To query the API, you'll need to authenticate yourself with one of the methods below or by clicking on any of the locks.\n\n## Authentication\n\nAll endpoints are protected except for auth endpoints. You either need to authenticate with one of the following ways all within the `Authorization` request header:\n1. provide a JWT as a bearer token - `Bearer JWT_TOKEN`\n2. provide username + password as basic authentication - `Basic base64(username:password)`\n3. provide a API token as token authentication - `Token API_TOKEN`\n\nOnly the documentation `/api/v1/docs` and the authentication `/api/v1/auth` endpoints are not protected.\n\n## Clients\n\nThere's no official API client yet, but thanks to the OpenAPI documentation, you can generate your own HTTP client using something like [OpenAPI Generator](https://openapi-generator.tech/) with the JSON from the OpenAPI docs located at `/api/v1/docs/openapi.json`.",
    "contact": {
      "name": "Beno√Æt Jeaurond",
      "email": "benoit@jeaurond.dev"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/MIT"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get all applications",
        "operationId": "get_applications",
        "responses": {
          "200": {
            "description": "List matching applications by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create a new application",
        "operationId": "create_application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyApplication"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Application created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get application by database ID",
        "operationId": "get_application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get application by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "description": "Application was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update an application",
        "operationId": "update_application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyApplication"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Application updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Application was not updated"
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete an application",
        "operationId": "delete_application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application database ID",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Application deleted successfully"
          },
          "404": {
            "description": "Application not found"
          }
        }
      }
    },
    "/applications/{id}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get roles for application",
        "operationId": "get_application_roles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List matching roles by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role",
        "operationId": "create_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application database ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Verifies if the backend is healthy and it's related services",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Backend is healthy"
          }
        }
      }
    },
    "/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "Get all providers",
        "operationId": "get_providers",
        "responses": {
          "200": {
            "description": "List matching providers by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Providers"
        ],
        "summary": "Create a new provider",
        "operationId": "create_provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Provider created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{id}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "Get prodiver by database ID",
        "operationId": "get_provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Provider database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get provider by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "404": {
            "description": "Provider was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Providers"
        ],
        "summary": "Update a provider",
        "operationId": "update_provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Provider updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Provider was not updated"
          }
        }
      },
      "delete": {
        "tags": [
          "Providers"
        ],
        "summary": "Delete a provider",
        "operationId": "delete_provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Provider database ID",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Provider deleted successfully"
          },
          "404": {
            "description": "Provider not found"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles",
        "operationId": "get_roles",
        "responses": {
          "200": {
            "description": "List matching roles by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by database ID",
        "operationId": "get_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get role by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Role was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "operationId": "update_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role database ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Role was not updated"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "operationId": "delete_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role database ID",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "operationId": "get_users",
        "responses": {
          "200": {
            "description": "List matching users by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by database ID",
        "operationId": "get_user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "operationId": "update_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User was not updated"
          }
        }
      }
    },
    "/users/{id}/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user roles",
        "operationId": "get_user_roles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List matching user roles by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/roles/{id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Assign a role to a user",
        "operationId": "assign_user_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User database ID",
            "required": true
          },
          {
            "name": "role_id",
            "in": "path",
            "description": "Role database ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role assigned successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Role doesn't exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a role from a user",
        "operationId": "remove_user_role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User database ID",
            "required": true
          },
          {
            "name": "role_id",
            "in": "path",
            "description": "Role database ID",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Role removed successfully"
          },
          "404": {
            "description": "Role doesn't exist"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Application": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "creator_id",
          "name",
          "password_auth",
          "password_min_length",
          "password_requires_lowercase",
          "password_requires_uppercase",
          "password_requires_number",
          "password_requires_special",
          "password_requires_unique",
          "password_requires_non_common",
          "verification_required"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "creator_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "website": {
            "type": [
              "string",
              "null"
            ]
          },
          "icon": {
            "type": [
              "string",
              "null"
            ]
          },
          "password_auth": {
            "type": "boolean"
          },
          "password_min_length": {
            "type": "integer",
            "format": "int64"
          },
          "password_max_length": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "password_requires_lowercase": {
            "type": "boolean"
          },
          "password_requires_uppercase": {
            "type": "boolean"
          },
          "password_requires_number": {
            "type": "boolean"
          },
          "password_requires_special": {
            "type": "boolean"
          },
          "password_requires_unique": {
            "type": "boolean"
          },
          "password_requires_non_common": {
            "type": "boolean"
          },
          "verification_required": {
            "type": "boolean"
          },
          "verification_method": {
            "type": [
              "string",
              "null"
            ]
          },
          "verification_code": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ModifyApplication": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "website": {
            "type": [
              "string",
              "null"
            ]
          },
          "icon": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ModifyProvider": {
        "type": "object",
        "required": [
          "name",
          "kind",
          "client_id",
          "client_secret",
          "redirect_uri"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          }
        }
      },
      "ModifyRole": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ModifyUser": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "username": {
            "type": [
              "string",
              "null"
            ]
          },
          "picture": {
            "type": [
              "string",
              "null"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "Provider": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "client_id",
          "client_secret",
          "redirect_uri"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "creator_id",
          "application_id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "creator_id": {
            "type": "integer",
            "format": "int64"
          },
          "application_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "disabled",
          "verified"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "username": {
            "type": [
              "string",
              "null"
            ]
          },
          "picture": {
            "type": [
              "string",
              "null"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Applications",
      "description": "Application management"
    },
    {
      "name": "Health",
      "description": "Overall health check for the service"
    },
    {
      "name": "Providers",
      "description": "Authentication provider management"
    },
    {
      "name": "Roles",
      "description": "Role management"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ]
}